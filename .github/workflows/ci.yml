name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install deps
        run: |
          pip install poetry
          poetry install
          poetry run pip install pytest-cov diff-cover
      - name: Run tests with coverage (gate 85%)
        run: |
          poetry run pytest -q --cov=ws_docflow --cov-report=xml --cov-report=term --cov-fail-under=85
      - name: Enforce diff coverage on changed lines (90%)
        run: |
          poetry run diff-cover coverage.xml --compare-branch=origin/main --fail-under=90
test:
    name: Lint, Type-check & Tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: "1.8.3"

      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies (project included)
        run: |
          poetry install --no-interaction

      - name: Lint & Format (check-only)
        env:
          PYTHONPATH: src
        run: |
          poetry run ruff check .
          poetry run black --check .

      - name: Type check (mypy)
        env:
          PYTHONPATH: src
        run: poetry run mypy src

      - name: Run tests with coverage
        shell: bash
        env:
          PYTHONPATH: src
        run: |
          poetry run pytest -q \
            --cov=ws_docflow \
            --cov-report=xml \
            --cov-report=term-missing \
            --junitxml=pytest-junit.xml



      - name: Upload coverage & junit artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-${{ matrix.os }}
          path: |
            coverage.xml
            pytest-junit.xml
